1、strlen()  sizeof()
2、数组指针 指针数组  函数指针 指针函数
3、复杂指针的解析以及化解
-------------------------------------------
1、数制转换
2、字节对齐

strlen() strcat()  strcmp()  strcpy()
memset() memcmp()  memcpy()  memmove()
strncat()  strncmp()  strncpy()
strcasecmp("abc","ABC") 实现

1、大小端
2、移位操作
3、柔性数组

1.编写函数：
unsigned int  reverse_bit(unsigned int value);
这个函数的返回值是value的二进制位模式从左到右翻转后的值。

如：
在32位机器上25这个值包含下列各位：
00000000000000000000000000011001
翻转后：（2550136832）
10011000000000000000000000000000
程序结果返回：
          2550136832

2.不使用（a+b）/2这种方式，求两个数的平均值。

3.编程实现：
一组数据中只有一个数字出现了一次。其他所有数字都是成对出现的。
请找出这个数字。（使用位运算）

4.请编码实现以下功能的函数
功能：实现对一个8 bit数据（unsigned char类型）的指定位（例如第n位）的置0或者置1操作，并保持其他位不变。
函数原型：
 void bit_set(unsigned char *p_data, unsigned char position, bool flag)
 函数参数说明：
 P_data 是指定的源数据，position是指定位（取值范围1~8）；flag表示是置0还是置1操作，true: 置1  flase:置0

5.给出一个unsigned short value，求出value的各四位之和。
如：value = 10, 其二进制位 0000 0000 0000 1010，
其和Sum = 0000 + 0000 + 0000 + 1010,即 0+0+0+10 = 10

6.char SmallInt(unsigned long value)
{
	//????????
}
void main()
{
	//char ch = 7491491;
	unsigned long value = 7491491
	cout<<SmallInt(value)<<endl;
}
